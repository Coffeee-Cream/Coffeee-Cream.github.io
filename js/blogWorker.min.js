import"https://unpkg.com/comlink/dist/umd/comlink.js";import http from"https://unpkg.com/isomorphic-git@beta/http/web/index.js";import"https://unpkg.com/isomorphic-git";import"https://unpkg.com/@isomorphic-git/lightning-fs";import"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/12.1.0/markdown-it.min.js";import"js/viajs/object.js";import"js/viajs/property.js";import"js/viajs/controller.js";const getBlogs=async function(){const e=via.document,t="/";var r=new LightningFS("fs",{wipe:!0}),n=r.promises,o=markdownit({html:!0,breaks:!0,linkify:!0,typographer:!0});console.log("giting"),await git.clone({fs:r,http:http,dir:t,corsProxy:"https://cors.isomorphic-git.org",url:"https://github.com/Coffeee-Cream/blog",ref:"main",singleBranch:!0,depth:10}),e.querySelector("#blog > .vertical-center").innerHTML=`<section>${o.render(await n.readFile("/README.md",{encoding:"utf8"}))}<br><div class="scroll">scroll â–¼ down</div></section>`,0==navigator.onLine&&(e.querySelector("#blog-list > .vertical-center").innerHTML="Your Offline");let i=await n.readFile("/registry/scratch-projects.json",{encoding:"utf8"});i=JSON.parse(i),i=i.data,e.querySelector("#scratch-proj > .vertical-center").style.display="none";for(let t=0;t<i.length;t++)if(t>5){let t=e.createElement("div");t.innerHTML='<br>\n\t\t\t<span style="text-align: center">\n\t\t\t<a href="https://scratch.mit.edu/users/CoffeeeCream/projects/" target="_blank">More...</a>\n\t\t\t</span>\n\t\t\t',e.getElementById("proj-holder").append(t)}else{let r=e.createElement("div");r.innerHTML=`<img src="https://cdn2.scratch.mit.edu/get_image/project/${i[t].id}_144x108.png" width="90%"  loading="lazy">\n\t\t\t<br>\n\t\t\t<span style="text-align: center">\n\t\t\t<a href="https://scratch.mit.edu/projects/${i[t].id}" target="_blank">${i[t].name}</a>\n\t\t\t</span>\n\t\t\t`,e.getElementById("proj-holder").append(r)}let l=await n.readFile("/blogs/blogs.json",{encoding:"utf8"});l=JSON.parse(l),e.querySelector("#blog-list").innerHTML="";for(let t=0;t<l.length;t++){let r=e.createElement("span");r.innerHTML=`\n\t\t<a href="/?blog=${l[t].name}#read-blog">${l[t].name}</a>\n\t\t`,e.querySelector("#blog-list").append(r),r=e.createElement("br"),e.querySelector("#blog-list").append(r)}if(window.location.href.indexOf("#read-blog")>-1){const t=window.location.search,r=new URLSearchParams(t).get("blog");for(let t=0;t<l.length;t++)r==l[t].name&&(e.querySelector("#read-blog > .vertical-center").style.display="none",e.getElementById("reader").innerHTML=o.render(await n.readFile("/blogs/markup/"+l[t].file.location,{encoding:"utf8"})),e.getElementById("reader").style.display="block")}};Comlink.expose(getBlogs);
